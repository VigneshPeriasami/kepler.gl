"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.uiStateReducerFactory = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reduxActions = require("redux-actions");

var _actionTypes = _interopRequireDefault(require("../constants/action-types"));

var _uiStateUpdaters = require("./ui-state-updaters");

var _actionHandler;

var actionHandler = (_actionHandler = {}, (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.TOGGLE_SIDE_PANEL, _uiStateUpdaters.toggleSidePanelUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.TOGGLE_MODAL, _uiStateUpdaters.toggleModalUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.SHOW_EXPORT_DROPDOWN, _uiStateUpdaters.showExportDropdownUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.HIDE_EXPORT_DROPDOWN, _uiStateUpdaters.hideExportDropdownUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.OPEN_DELETE_MODAL, _uiStateUpdaters.openDeleteModalUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.TOGGLE_MAP_CONTROL, _uiStateUpdaters.toggleMapControlUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.ADD_NOTIFICATION, _uiStateUpdaters.addNotificationUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.REMOVE_NOTIFICATION, _uiStateUpdaters.removeNotificationUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.SET_RATIO, _uiStateUpdaters.setRatioUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.SET_RESOLUTION, _uiStateUpdaters.setResolutionUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.TOGGLE_LEGEND, _uiStateUpdaters.toggleLegendUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.START_EXPORTING_IMAGE, _uiStateUpdaters.startExportingImage), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.SET_EXPORT_IMAGE_DATA_URI, _uiStateUpdaters.setExportImageDataUri), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.CLEANUP_EXPORT_IMAGE, _uiStateUpdaters.cleanupExportImage), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.SET_EXPORT_SELECTED_DATASET, _uiStateUpdaters.setExportSelectedDatasetUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.SET_EXPORT_DATA_TYPE, _uiStateUpdaters.setExportDataTypeUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.SET_EXPORT_FILTERED, _uiStateUpdaters.setExportFilteredUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.SET_EXPORT_DATA, _uiStateUpdaters.setExportDataUpdater), _actionHandler);
/* Reducer */

var uiStateReducerFactory = function uiStateReducerFactory() {
  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (0, _reduxActions.handleActions)(actionHandler, (0, _objectSpread2.default)({}, _uiStateUpdaters.INITIAL_UI_STATE, initialState, {
    initialState: initialState
  }));
};

exports.uiStateReducerFactory = uiStateReducerFactory;

var _default = uiStateReducerFactory();

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWR1Y2Vycy91aS1zdGF0ZS5qcyJdLCJuYW1lcyI6WyJhY3Rpb25IYW5kbGVyIiwiQWN0aW9uVHlwZXMiLCJUT0dHTEVfU0lERV9QQU5FTCIsInRvZ2dsZVNpZGVQYW5lbFVwZGF0ZXIiLCJUT0dHTEVfTU9EQUwiLCJ0b2dnbGVNb2RhbFVwZGF0ZXIiLCJTSE9XX0VYUE9SVF9EUk9QRE9XTiIsInNob3dFeHBvcnREcm9wZG93blVwZGF0ZXIiLCJISURFX0VYUE9SVF9EUk9QRE9XTiIsImhpZGVFeHBvcnREcm9wZG93blVwZGF0ZXIiLCJPUEVOX0RFTEVURV9NT0RBTCIsIm9wZW5EZWxldGVNb2RhbFVwZGF0ZXIiLCJUT0dHTEVfTUFQX0NPTlRST0wiLCJ0b2dnbGVNYXBDb250cm9sVXBkYXRlciIsIkFERF9OT1RJRklDQVRJT04iLCJhZGROb3RpZmljYXRpb25VcGRhdGVyIiwiUkVNT1ZFX05PVElGSUNBVElPTiIsInJlbW92ZU5vdGlmaWNhdGlvblVwZGF0ZXIiLCJTRVRfUkFUSU8iLCJzZXRSYXRpb1VwZGF0ZXIiLCJTRVRfUkVTT0xVVElPTiIsInNldFJlc29sdXRpb25VcGRhdGVyIiwiVE9HR0xFX0xFR0VORCIsInRvZ2dsZUxlZ2VuZFVwZGF0ZXIiLCJTVEFSVF9FWFBPUlRJTkdfSU1BR0UiLCJzdGFydEV4cG9ydGluZ0ltYWdlIiwiU0VUX0VYUE9SVF9JTUFHRV9EQVRBX1VSSSIsInNldEV4cG9ydEltYWdlRGF0YVVyaSIsIkNMRUFOVVBfRVhQT1JUX0lNQUdFIiwiY2xlYW51cEV4cG9ydEltYWdlIiwiU0VUX0VYUE9SVF9TRUxFQ1RFRF9EQVRBU0VUIiwic2V0RXhwb3J0U2VsZWN0ZWREYXRhc2V0VXBkYXRlciIsIlNFVF9FWFBPUlRfREFUQV9UWVBFIiwic2V0RXhwb3J0RGF0YVR5cGVVcGRhdGVyIiwiU0VUX0VYUE9SVF9GSUxURVJFRCIsInNldEV4cG9ydEZpbHRlcmVkVXBkYXRlciIsIlNFVF9FWFBPUlRfREFUQSIsInNldEV4cG9ydERhdGFVcGRhdGVyIiwidWlTdGF0ZVJlZHVjZXJGYWN0b3J5IiwiaW5pdGlhbFN0YXRlIiwiSU5JVElBTF9VSV9TVEFURSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQW9CQTs7QUFDQTs7QUFFQTs7OztBQTBCQSxJQUFNQSxhQUFhLHVFQUNoQkMscUJBQVlDLGlCQURJLEVBQ2dCQyx1Q0FEaEIsaURBRWhCRixxQkFBWUcsWUFGSSxFQUVXQyxtQ0FGWCxpREFHaEJKLHFCQUFZSyxvQkFISSxFQUdtQkMsMENBSG5CLGlEQUloQk4scUJBQVlPLG9CQUpJLEVBSW1CQywwQ0FKbkIsaURBS2hCUixxQkFBWVMsaUJBTEksRUFLZ0JDLHVDQUxoQixpREFNaEJWLHFCQUFZVyxrQkFOSSxFQU1pQkMsd0NBTmpCLGlEQU9oQloscUJBQVlhLGdCQVBJLEVBT2VDLHVDQVBmLGlEQVFoQmQscUJBQVllLG1CQVJJLEVBUWtCQywwQ0FSbEIsaURBVWhCaEIscUJBQVlpQixTQVZJLEVBVVFDLGdDQVZSLGlEQVdoQmxCLHFCQUFZbUIsY0FYSSxFQVdhQyxxQ0FYYixpREFZaEJwQixxQkFBWXFCLGFBWkksRUFZWUMsb0NBWlosaURBYWhCdEIscUJBQVl1QixxQkFiSSxFQWFvQkMsb0NBYnBCLGlEQWNoQnhCLHFCQUFZeUIseUJBZEksRUFjd0JDLHNDQWR4QixpREFlaEIxQixxQkFBWTJCLG9CQWZJLEVBZW1CQyxtQ0FmbkIsaURBaUJoQjVCLHFCQUFZNkIsMkJBakJJLEVBaUIwQkMsZ0RBakIxQixpREFrQmhCOUIscUJBQVkrQixvQkFsQkksRUFrQm1CQyx5Q0FsQm5CLGlEQW1CaEJoQyxxQkFBWWlDLG1CQW5CSSxFQW1Ca0JDLHlDQW5CbEIsaURBb0JoQmxDLHFCQUFZbUMsZUFwQkksRUFvQmNDLHFDQXBCZCxrQkFBbkI7QUF1QkE7O0FBQ08sSUFBTUMscUJBQXFCLEdBQUcsU0FBeEJBLHFCQUF3QjtBQUFBLE1BQUNDLFlBQUQsdUVBQWdCLEVBQWhCO0FBQUEsU0FDbkMsaUNBQWN2QyxhQUFkLGtDQUFpQ3dDLGlDQUFqQyxFQUFzREQsWUFBdEQ7QUFBb0VBLElBQUFBLFlBQVksRUFBWkE7QUFBcEUsS0FEbUM7QUFBQSxDQUE5Qjs7OztlQUdRRCxxQkFBcUIsRSIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxOSBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCB7aGFuZGxlQWN0aW9uc30gZnJvbSAncmVkdXgtYWN0aW9ucyc7XG5pbXBvcnQgQWN0aW9uVHlwZXMgZnJvbSAnY29uc3RhbnRzL2FjdGlvbi10eXBlcyc7XG5cbmltcG9ydCB7XG4gIElOSVRJQUxfVUlfU1RBVEUsXG4gIG9wZW5EZWxldGVNb2RhbFVwZGF0ZXIsXG4gIHRvZ2dsZU1vZGFsVXBkYXRlcixcbiAgc2hvd0V4cG9ydERyb3Bkb3duVXBkYXRlcixcbiAgaGlkZUV4cG9ydERyb3Bkb3duVXBkYXRlcixcbiAgdG9nZ2xlU2lkZVBhbmVsVXBkYXRlcixcbiAgdG9nZ2xlTWFwQ29udHJvbFVwZGF0ZXIsXG4gIGFkZE5vdGlmaWNhdGlvblVwZGF0ZXIsXG4gIHJlbW92ZU5vdGlmaWNhdGlvblVwZGF0ZXIsXG5cbiAgLy8gZXhwb3J0IGltYWdlXG4gIGNsZWFudXBFeHBvcnRJbWFnZSxcbiAgc2V0RXhwb3J0SW1hZ2VEYXRhVXJpLFxuICBzZXRSYXRpb1VwZGF0ZXIsXG4gIHNldFJlc29sdXRpb25VcGRhdGVyLFxuICBzdGFydEV4cG9ydGluZ0ltYWdlLFxuICB0b2dnbGVMZWdlbmRVcGRhdGVyLFxuXG4gIC8vIGV4cG9ydCBkYXRhXG4gIHNldEV4cG9ydFNlbGVjdGVkRGF0YXNldFVwZGF0ZXIsXG4gIHNldEV4cG9ydERhdGFUeXBlVXBkYXRlcixcbiAgc2V0RXhwb3J0RmlsdGVyZWRVcGRhdGVyLFxuICBzZXRFeHBvcnREYXRhVXBkYXRlclxufSBmcm9tICcuL3VpLXN0YXRlLXVwZGF0ZXJzJztcblxuY29uc3QgYWN0aW9uSGFuZGxlciA9IHtcbiAgW0FjdGlvblR5cGVzLlRPR0dMRV9TSURFX1BBTkVMXTogdG9nZ2xlU2lkZVBhbmVsVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlRPR0dMRV9NT0RBTF06IHRvZ2dsZU1vZGFsVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlNIT1dfRVhQT1JUX0RST1BET1dOXTogc2hvd0V4cG9ydERyb3Bkb3duVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLkhJREVfRVhQT1JUX0RST1BET1dOXTogaGlkZUV4cG9ydERyb3Bkb3duVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLk9QRU5fREVMRVRFX01PREFMXTogb3BlbkRlbGV0ZU1vZGFsVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlRPR0dMRV9NQVBfQ09OVFJPTF06IHRvZ2dsZU1hcENvbnRyb2xVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuQUREX05PVElGSUNBVElPTl06IGFkZE5vdGlmaWNhdGlvblVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5SRU1PVkVfTk9USUZJQ0FUSU9OXTogcmVtb3ZlTm90aWZpY2F0aW9uVXBkYXRlcixcblxuICBbQWN0aW9uVHlwZXMuU0VUX1JBVElPXTogc2V0UmF0aW9VcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuU0VUX1JFU09MVVRJT05dOiBzZXRSZXNvbHV0aW9uVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlRPR0dMRV9MRUdFTkRdOiB0b2dnbGVMZWdlbmRVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuU1RBUlRfRVhQT1JUSU5HX0lNQUdFXTogc3RhcnRFeHBvcnRpbmdJbWFnZSxcbiAgW0FjdGlvblR5cGVzLlNFVF9FWFBPUlRfSU1BR0VfREFUQV9VUkldOiBzZXRFeHBvcnRJbWFnZURhdGFVcmksXG4gIFtBY3Rpb25UeXBlcy5DTEVBTlVQX0VYUE9SVF9JTUFHRV06IGNsZWFudXBFeHBvcnRJbWFnZSxcblxuICBbQWN0aW9uVHlwZXMuU0VUX0VYUE9SVF9TRUxFQ1RFRF9EQVRBU0VUXTogc2V0RXhwb3J0U2VsZWN0ZWREYXRhc2V0VXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlNFVF9FWFBPUlRfREFUQV9UWVBFXTogc2V0RXhwb3J0RGF0YVR5cGVVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuU0VUX0VYUE9SVF9GSUxURVJFRF06IHNldEV4cG9ydEZpbHRlcmVkVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlNFVF9FWFBPUlRfREFUQV06IHNldEV4cG9ydERhdGFVcGRhdGVyXG59O1xuXG4vKiBSZWR1Y2VyICovXG5leHBvcnQgY29uc3QgdWlTdGF0ZVJlZHVjZXJGYWN0b3J5ID0gKGluaXRpYWxTdGF0ZSA9IHt9KSA9PlxuICBoYW5kbGVBY3Rpb25zKGFjdGlvbkhhbmRsZXIsIHsuLi5JTklUSUFMX1VJX1NUQVRFLCAuLi5pbml0aWFsU3RhdGUsIGluaXRpYWxTdGF0ZX0pO1xuXG5leHBvcnQgZGVmYXVsdCB1aVN0YXRlUmVkdWNlckZhY3RvcnkoKTtcbiJdfQ==