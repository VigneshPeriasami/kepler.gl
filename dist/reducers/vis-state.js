"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.visStateReducerFactory = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _actionTypes = _interopRequireDefault(require("../constants/action-types"));

var _reduxActions = require("redux-actions");

var _visStateUpdaters = require("./vis-state-updaters");

var _actionHandler;

var actionHandler = (_actionHandler = {}, (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.ADD_FILTER, _visStateUpdaters.addFilterUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.ADD_LAYER, _visStateUpdaters.addLayerUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.ENLARGE_FILTER, _visStateUpdaters.enlargeFilterUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.INTERACTION_CONFIG_CHANGE, _visStateUpdaters.interactionConfigChangeUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.LAYER_CLICK, _visStateUpdaters.layerClickUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.LAYER_CONFIG_CHANGE, _visStateUpdaters.layerConfigChangeUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.LAYER_HOVER, _visStateUpdaters.layerHoverUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.LAYER_TYPE_CHANGE, _visStateUpdaters.layerTypeChangeUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.LAYER_VIS_CONFIG_CHANGE, _visStateUpdaters.layerVisConfigChangeUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.LAYER_VISUAL_CHANNEL_CHANGE, _visStateUpdaters.layerVisualChannelChangeUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.LOAD_FILES, _visStateUpdaters.loadFilesUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.LOAD_FILES_ERR, _visStateUpdaters.loadFilesErrUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.MAP_CLICK, _visStateUpdaters.mapClickUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.RECEIVE_MAP_CONFIG, _visStateUpdaters.receiveMapConfigUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.REMOVE_DATASET, _visStateUpdaters.removeDatasetUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.REMOVE_FILTER, _visStateUpdaters.removeFilterUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.REMOVE_LAYER, _visStateUpdaters.removeLayerUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.REORDER_LAYER, _visStateUpdaters.reorderLayerUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.RESET_MAP_CONFIG, _visStateUpdaters.resetMapConfigVisStateUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.SET_FILTER, _visStateUpdaters.setFilterUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.SET_FILTER_PLOT, _visStateUpdaters.setFilterPlotUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.SET_VISIBLE_LAYERS_FOR_MAP, _visStateUpdaters.setVisibleLayersForMapUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.SHOW_DATASET_TABLE, _visStateUpdaters.showDatasetTableUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.TOGGLE_FILTER_ANIMATION, _visStateUpdaters.toggleFilterAnimationUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.UPDATE_FILTER_ANIMATION_SPEED, _visStateUpdaters.updateAnimationSpeedUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.TOGGLE_LAYER_FOR_MAP, _visStateUpdaters.toggleLayerForMapUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.TOGGLE_SPLIT_MAP, _visStateUpdaters.toggleSplitMapUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.UPDATE_LAYER_BLENDING, _visStateUpdaters.updateLayerBlendingUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.UPDATE_VIS_DATA, _visStateUpdaters.updateVisDataUpdater), _actionHandler); // construct vis-state reducer

var visStateReducerFactory = function visStateReducerFactory() {
  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (0, _reduxActions.handleActions)(actionHandler, (0, _objectSpread2.default)({}, _visStateUpdaters.INITIAL_VIS_STATE, initialState, {
    initialState: initialState
  }));
};

exports.visStateReducerFactory = visStateReducerFactory;

var _default = visStateReducerFactory();

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,