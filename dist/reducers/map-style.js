"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.mapStyleReducerFactory = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reduxActions = require("redux-actions");

var _actionTypes = _interopRequireDefault(require("../constants/action-types"));

var _mapStyleUpdaters = require("./map-style-updaters");

var _actionHandler;

var actionHandler = (_actionHandler = {}, (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.INIT, _mapStyleUpdaters.initMapStyleUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.INPUT_MAP_STYLE, _mapStyleUpdaters.inputMapStyleUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.MAP_CONFIG_CHANGE, _mapStyleUpdaters.mapConfigChangeUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.MAP_STYLE_CHANGE, _mapStyleUpdaters.mapStyleChangeUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.LOAD_MAP_STYLES, _mapStyleUpdaters.loadMapStylesUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.LOAD_MAP_STYLE_ERR, _mapStyleUpdaters.loadMapStyleErrUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.RECEIVE_MAP_CONFIG, _mapStyleUpdaters.receiveMapConfigUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.LOAD_CUSTOM_MAP_STYLE, _mapStyleUpdaters.loadCustomMapStyleUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.ADD_CUSTOM_MAP_STYLE, _mapStyleUpdaters.addCustomMapStyleUpdater), (0, _defineProperty2.default)(_actionHandler, _actionTypes.default.RESET_MAP_CONFIG, _mapStyleUpdaters.resetMapConfigMapStyleUpdater), _actionHandler);

var mapStyleReducerFactory = function mapStyleReducerFactory() {
  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (0, _reduxActions.handleActions)(actionHandler, (0, _objectSpread2.default)({}, _mapStyleUpdaters.INITIAL_MAP_STYLE, initialState, {
    initialState: initialState
  }));
};

exports.mapStyleReducerFactory = mapStyleReducerFactory;

var _default = mapStyleReducerFactory();

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWR1Y2Vycy9tYXAtc3R5bGUuanMiXSwibmFtZXMiOlsiYWN0aW9uSGFuZGxlciIsIkFjdGlvblR5cGVzIiwiSU5JVCIsImluaXRNYXBTdHlsZVVwZGF0ZXIiLCJJTlBVVF9NQVBfU1RZTEUiLCJpbnB1dE1hcFN0eWxlVXBkYXRlciIsIk1BUF9DT05GSUdfQ0hBTkdFIiwibWFwQ29uZmlnQ2hhbmdlVXBkYXRlciIsIk1BUF9TVFlMRV9DSEFOR0UiLCJtYXBTdHlsZUNoYW5nZVVwZGF0ZXIiLCJMT0FEX01BUF9TVFlMRVMiLCJsb2FkTWFwU3R5bGVzVXBkYXRlciIsIkxPQURfTUFQX1NUWUxFX0VSUiIsImxvYWRNYXBTdHlsZUVyclVwZGF0ZXIiLCJSRUNFSVZFX01BUF9DT05GSUciLCJyZWNlaXZlTWFwQ29uZmlnVXBkYXRlciIsIkxPQURfQ1VTVE9NX01BUF9TVFlMRSIsImxvYWRDdXN0b21NYXBTdHlsZVVwZGF0ZXIiLCJBRERfQ1VTVE9NX01BUF9TVFlMRSIsImFkZEN1c3RvbU1hcFN0eWxlVXBkYXRlciIsIlJFU0VUX01BUF9DT05GSUciLCJyZXNldE1hcENvbmZpZ01hcFN0eWxlVXBkYXRlciIsIm1hcFN0eWxlUmVkdWNlckZhY3RvcnkiLCJpbml0aWFsU3RhdGUiLCJJTklUSUFMX01BUF9TVFlMRSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQW9CQTs7QUFHQTs7QUFFQTs7OztBQWNBLElBQU1BLGFBQWEsdUVBQ2hCQyxxQkFBWUMsSUFESSxFQUNHQyxxQ0FESCxpREFFaEJGLHFCQUFZRyxlQUZJLEVBRWNDLHNDQUZkLGlEQUdoQkoscUJBQVlLLGlCQUhJLEVBR2dCQyx3Q0FIaEIsaURBSWhCTixxQkFBWU8sZ0JBSkksRUFJZUMsdUNBSmYsaURBS2hCUixxQkFBWVMsZUFMSSxFQUtjQyxzQ0FMZCxpREFNaEJWLHFCQUFZVyxrQkFOSSxFQU1pQkMsd0NBTmpCLGlEQU9oQloscUJBQVlhLGtCQVBJLEVBT2lCQyx5Q0FQakIsaURBUWhCZCxxQkFBWWUscUJBUkksRUFRb0JDLDJDQVJwQixpREFTaEJoQixxQkFBWWlCLG9CQVRJLEVBU21CQywwQ0FUbkIsaURBVWhCbEIscUJBQVltQixnQkFWSSxFQVVlQywrQ0FWZixrQkFBbkI7O0FBYU8sSUFBTUMsc0JBQXNCLEdBQUcsU0FBekJBLHNCQUF5QjtBQUFBLE1BQUNDLFlBQUQsdUVBQWdCLEVBQWhCO0FBQUEsU0FDcEMsaUNBQWN2QixhQUFkLGtDQUFpQ3dCLG1DQUFqQyxFQUF1REQsWUFBdkQ7QUFBcUVBLElBQUFBLFlBQVksRUFBWkE7QUFBckUsS0FEb0M7QUFBQSxDQUEvQjs7OztlQUdRRCxzQkFBc0IsRSIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxOSBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCB7aGFuZGxlQWN0aW9uc30gZnJvbSAncmVkdXgtYWN0aW9ucyc7XG5cbi8vIEFjdGlvbnNcbmltcG9ydCBBY3Rpb25UeXBlcyBmcm9tICdjb25zdGFudHMvYWN0aW9uLXR5cGVzJztcblxuaW1wb3J0IHtcbiAgSU5JVElBTF9NQVBfU1RZTEUsXG4gIGlucHV0TWFwU3R5bGVVcGRhdGVyLFxuICBpbml0TWFwU3R5bGVVcGRhdGVyLFxuICBtYXBDb25maWdDaGFuZ2VVcGRhdGVyLFxuICBtYXBTdHlsZUNoYW5nZVVwZGF0ZXIsXG4gIGxvYWRNYXBTdHlsZXNVcGRhdGVyLFxuICBsb2FkTWFwU3R5bGVFcnJVcGRhdGVyLFxuICByZWNlaXZlTWFwQ29uZmlnVXBkYXRlcixcbiAgcmVzZXRNYXBDb25maWdNYXBTdHlsZVVwZGF0ZXIsXG4gIGxvYWRDdXN0b21NYXBTdHlsZVVwZGF0ZXIsXG4gIGFkZEN1c3RvbU1hcFN0eWxlVXBkYXRlclxufSBmcm9tICcuL21hcC1zdHlsZS11cGRhdGVycyc7XG5cbmNvbnN0IGFjdGlvbkhhbmRsZXIgPSB7XG4gIFtBY3Rpb25UeXBlcy5JTklUXTogaW5pdE1hcFN0eWxlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLklOUFVUX01BUF9TVFlMRV06IGlucHV0TWFwU3R5bGVVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuTUFQX0NPTkZJR19DSEFOR0VdOiBtYXBDb25maWdDaGFuZ2VVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuTUFQX1NUWUxFX0NIQU5HRV06IG1hcFN0eWxlQ2hhbmdlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLkxPQURfTUFQX1NUWUxFU106IGxvYWRNYXBTdHlsZXNVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuTE9BRF9NQVBfU1RZTEVfRVJSXTogbG9hZE1hcFN0eWxlRXJyVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlJFQ0VJVkVfTUFQX0NPTkZJR106IHJlY2VpdmVNYXBDb25maWdVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuTE9BRF9DVVNUT01fTUFQX1NUWUxFXTogbG9hZEN1c3RvbU1hcFN0eWxlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLkFERF9DVVNUT01fTUFQX1NUWUxFXTogYWRkQ3VzdG9tTWFwU3R5bGVVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuUkVTRVRfTUFQX0NPTkZJR106IHJlc2V0TWFwQ29uZmlnTWFwU3R5bGVVcGRhdGVyXG59O1xuXG5leHBvcnQgY29uc3QgbWFwU3R5bGVSZWR1Y2VyRmFjdG9yeSA9IChpbml0aWFsU3RhdGUgPSB7fSkgPT5cbiAgaGFuZGxlQWN0aW9ucyhhY3Rpb25IYW5kbGVyLCB7Li4uSU5JVElBTF9NQVBfU1RZTEUsIC4uLmluaXRpYWxTdGF0ZSwgaW5pdGlhbFN0YXRlfSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1hcFN0eWxlUmVkdWNlckZhY3RvcnkoKTtcbiJdfQ==